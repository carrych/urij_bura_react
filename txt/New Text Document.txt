#include <iostream>
#include <ctime>
#include <iomanip>
#include <random>
#include <conio.h>
#include <Windows.h>
#include <stdio.h>
#include <string>
#define SIZE 10// vusota ta shuruna igrovogo polya
#define X1 6 // constanta dlya vuznachennya koordunat pochatky igrovogo polya
#define A 65 // kod ASCII literu A

char field_fleet[SIZE][SIZE], field_shoot[SIZE][SIZE], columns[SIZE];
std::string name = "";
bool step;
char coordinate1 = '0';
int coordinate2 = 0;

void instruction()// opus pravul gru ta oformlennya polya
{
	setlocale(0, ".1251");
	std::cout << "\t\t\t=== Морской бой ===\n\n";
	std::cout << "\t\tПравила размещения кораблей(флота)\n\n";
	std::cout << "\t\tДва игровых поля — обычно квадраты 10?10. Одно поле — для растановки флота, второе — для стрельбы.\n\n";
	std::cout << "\t\tРазмещаются:\n\n"; 
	std::cout << "\t1. корабль — ряд из 4 клеток(«четырёхпалубный»; линкор);\n"; 
	std::cout << "\t2. корабля — ряд из 3 клеток(«трёхпалубные»; крейсера);\n"; 
	std::cout << "\t3. корабля — ряд из 2 клеток(«двухпалубные»; эсминцы);\n"; 
	std::cout << "\t4. корабля — 1 клетка(«однопалубные»; торпедные катера);\n\n"; 
	std::cout << "При размещении корабли не могут касаться друг друга сторонами и углами. Касание углами запрещается.\n";
	std::cout << "Запрещается также размещать корабли буквой «Г», квадратом или зигзагом.\n";
	std::cout << "Рядом со «своим» полем чертится «чужое» такого же размера, только пустое.Это участок моря, где плавают корабли противника.\n";
	std::cout << "При попадании в корабль противника — на чужом поле ставится крестик, при холостом выстреле — точка.Попавший стреляет ещё раз.\n\n";
	std::cout << "Потопление кораблей \n\n";
	std::cout << "Если выстрел пришёлся в клетку, не занятую ни одним кораблём противника.Право хода переходит к сопернику.\n";
	std::cout << "Если выстрел пришёлся в клетку, где находится многопалубный корабль(размером больше чем 1 клетка).\n"; 
	std::cout << "Стрелявший игрок получает право на ещё один выстрел.\n";
	std::cout << "Если выстрел пришёлся в клетку, где находится однотрубный корабль, или последнюю непоражённую клетку многопалубного корабля.\n";
	std::cout << "Стрелявший игрок получает право на ещё один выстрел.\n";
	setlocale(0, ".1251");
	std::cout << "\nДля начала игры нажмите клавишу:";
	_getch();
}
void fld()
{
	setlocale(0, ".866");
	for (int i = 0; i < SIZE; i++)// poznachaemo stovpci polya
		columns[i] = '@' + i + 1;
	std::cout << "      ";
	for (int i = 0; i < SIZE; i++)
		std::cout << columns[i] << ' ';
	std::cout << std::endl << "     ";
	for (int i = 0;; i++)//oformlennya
	{
		if (i == 0) std::cout << (char)218;
		if (i == SIZE)
		{
			std::cout << "\b" << (char)191;
			break;
		}
		std::cout << (char)196 << (char)194;
	}
	std::cout << std::endl;
	for (int i = 0; i < SIZE; i++)//zapovnyemo pole probilamu
	{
		std::cout << std::setw(3) << i + 1 << "  " << (char)179;
		for (int j = 0; j < SIZE; j++)
		{
			field_fleet[i][j] = ' ';
			std::cout << field_fleet[i][j] << (char)179;
		}
		std::cout << std::endl;
		std::cout << std::setw(5) << ' ';
		if (i < SIZE - 1)
		{
			for (int i = 0;; i++)//oformlennya
			{
				if (i == 0) std::cout << (char)195;
				if (i == SIZE)
				{
					std::cout << "\b" << (char)180;
					break;
				}
				std::cout << (char)196 << (char)197;
			}
			std::cout << std::endl;
		}
		else
		{
			for (int i = 0;; i++)//oformlennya
			{
				if (i == 0) std::cout << (char)192;
				if (i == SIZE)
				{
					std::cout << "\b" << (char)217;
					break;
				}
				std::cout << (char)196 << (char)193;
			}
		}
	}
}
void setcur(int x, int y) // vvod bez system("cls")
{
	COORD coord;
	coord.X = x;
	coord.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}

struct My_fleet
{
	char battle_wagon[4] = {};
	char cruiser[3] = {};
	char destroyer[2] = {};
	char torpedo_boat = ' ';
};

My_fleet ships =
{
	{ (char)233, (char)254, (char)254, (char)267 },
	{ (char)233, (char)254, (char)267 },
	{ (char)233, (char)267},
	(char)233
};

void fleet()
{
	while(true)
	{ 
		fld();
		setlocale(0, ".1251");
		std::cout << "\nВведите адрес ячейки в которою хотите розместить начало корабля (например: А 5):";
		std::cin >> coordinate1 >> coordinate2;
	
		if ((int)coordinate1 < 'A' || (int)coordinate1 > 'J' || coordinate2 < 1 || coordinate2 > 10)
		{
			std::cout << "Неправильно введены координаты. Первая координата — буквы латинского алфавита от А до J. Вторая координата — цыфры от 1 до 10.\n";
			std::cout << "Пожалуйста, попробуйте снова.\n";
			_getch();
			system("cls");
		}
		else 
		{
			setcur((X1 + ((int)coordinate1 - A) * 2), (coordinate2 * 2));
			setlocale(0, ".866");
			std::cout << "";
			_getch();
		}
	//	/*fld();
	//	_getch();*/
	//	/*system("cls");*/
	}
	
	fld();
	_getch();
}

int main()
{
	//instruction();
	//system("cls");
	//setlocale(0, ".1251");
	//std::cout << "\nВведите имя игрока:";
	//std::cin >> name;
	/*fleet();*/
	setlocale(0, ".866");
	std::cout << ships.torpedo_boat;
	_getch();
	return 0;
}